name: Android CD

on:
  push:
    branches:
      - prod/android
jobs:
  build_and_distribute:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: android

    steps:
      - name: Repository Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create local.properties with BASE_URL
        run: |
          echo BASE_URL=\"${{ secrets.BASE_URL }}\" > local.properties
          echo NAVER_MAP_CLIENT_ID=\"${{ secrets.NAVER_MAP_CLIENT_ID }}\" >> local.properties
          echo NAVER_MAP_STYLE_ID=\"${{ secrets.NAVER_MAP_STYLE_ID }}\" >> local.properties

      - name: Load Google Service file
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo "$DATA" > app/google-services.json

      - name: Restore keystore file
        run: |
          mkdir -p app
          echo "$KEYSTORE_BASE64" | base64 --decode > app/festabook_appkey.jks
          echo "$GOOGLE_APPLICATION_CREDENTIALS" | base64 --decode > app/festabook-firebase-admin-sdk.json
          echo "JKS_FILE_PATH=./festabook_appkey.jks" >> local.properties
          echo "STORE_PASSWORD=${{ secrets.STORE_PASSWORD }}" >> local.properties
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> local.properties
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> local.properties
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.FIREBASE_ADMIN_SDK }}

      - name: Cache npm packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Grant Gradle execute permission
        run: chmod +x ./gradlew

      - name: Set Automatic Version Code
        run: |
          VERSION_CODE="$(git rev-list --count --first-parent HEAD)"
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV

      - name: Build Android App Bundle (AAB)
        run: ./gradlew bundleRelease
        env:
          VERSION_CODE: ${{ env.VERSION_CODE }}

      - name: Deploy to Firebase App Distribution
        env:
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          GOOGLE_APPLICATION_CREDENTIALS: app/festabook-firebase-admin-sdk.json
        run: firebase appdistribution:distribute app/build/outputs/bundle/release/app-release.aab --app ${{ env.FIREBASE_APP_ID }}

      - name: Get Version from properties
        id: get_version
        run: echo "VERSION=$( grep "VERSION=" version.properties | cut -d'=' -f2)" >> $GITHUB_ENV

      - name: Create Git Tag and Push
        if: success()
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag "android-v${{ env.VERSION }}"
          git push origin "android-v${{ env.VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


