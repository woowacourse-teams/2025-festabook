name: Slack Review Notification

on:
  pull_request:
    types: [opened, ready_for_review, edited, review_requested]

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PR_TITLE: ${{ github.event.pull_request.title }}
  PR_NUMBER: ${{ github.event.pull_request.number }}
  PR_URL: ${{ github.event.pull_request.html_url }}
  PR_AUTHOR: ${{ github.event.pull_request.user.login }}
  REPOSITORY: ${{ github.repository }}

jobs:
  notify-initial-reviewers:
    if: ${{ github.event.action == 'opened' || github.event.action == 'ready_for_review' || github.event.action == 'edited' }}
    runs-on: ubuntu-latest

    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Notify All Reviewers
        env:
          REVIEWERS_JSON: ${{ toJson(github.event.pull_request.requested_reviewers) }}
        run: |
          declare -A GITHUB_TO_SLACK
          GITHUB_TO_SLACK["soeun2537"]="U09A0LM0CRW"
          GITHUB_TO_SLACK["taek2222"]="U099ARRH3D3"
          GITHUB_TO_SLACK["changuii"]="U099BR9RNE6"
          GITHUB_TO_SLACK["eoehd1ek"]="U0995NANDML"
          GITHUB_TO_SLACK["oungsi2000"]="U098U2R57NK"
          GITHUB_TO_SLACK["parkjiminnnn"]="U098U8SLXHD"
          GITHUB_TO_SLACK["etama123"]="U0995MPSZ62"

          SLACK_AUTHOR_ID=${GITHUB_TO_SLACK[$PR_AUTHOR]:-"$PR_AUTHOR"}
          SLACK_AUTHOR_MENTION="<@$SLACK_AUTHOR_ID>"

          REVIEWER_MENTIONS=""
          for reviewer in $(echo "$REVIEWERS_JSON" | jq -r '.[].login'); do
            slack_id=${GITHUB_TO_SLACK[$reviewer]:-"$reviewer"}
            REVIEWER_MENTIONS+="<@$slack_id> "
          done

          if [ -z "$REVIEWER_MENTIONS" ]; then
            echo "Î¶¨Î∑∞Ïñ¥Í∞Ä Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏïÑ ÏïåÎ¶º ÏÉùÎûµ"
            exit 0
          fi

          read -r -d '' PAYLOAD <<EOF
          {
            "text": "üì¢ *Î¶¨Î∑∞ ÏöîÏ≤≠ ÏïåÎ¶º*\n*PR Ï†úÎ™©:* ${PR_TITLE} (#${PR_NUMBER})\n*ÏûëÏÑ±Ïûê:* ${SLACK_AUTHOR_MENTION}\n*Î¶¨Î∑∞Ïñ¥:* ${REVIEWER_MENTIONS}\n*ÎßÅÌÅ¨:* ${PR_URL}"
          }
          EOF

          curl -X POST 
          -H 'Content-type: application/json' 
          --data "$PAYLOAD" 
          $SLACK_WEBHOOK_URL

  notify-re-review-requested:
    if: ${{ github.event.action == 'review_requested' }}
    runs-on: ubuntu-latest

    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Notify Reviewer on Re-review Request
        env:
          PR_REVIEWER: ${{ github.event.requested_reviewer.login }}
        run: |
          declare -A GITHUB_TO_SLACK
          GITHUB_TO_SLACK["soeun2537"]="U09A0LM0CRW"
          GITHUB_TO_SLACK["taek2222"]="U099ARRH3D3"
          GITHUB_TO_SLACK["changuii"]="U099BR9RNE6"
          GITHUB_TO_SLACK["eoehd1ek"]="U0995NANDML"
          GITHUB_TO_SLACK["oungsi2000"]="U098U2R57NK"
          GITHUB_TO_SLACK["parkjiminnnn"]="U098U8SLXHD"
          GITHUB_TO_SLACK["etama123"]="U0995MPSZ62"
          
          SLACK_AUTHOR_ID=${GITHUB_TO_SLACK[$PR_AUTHOR]:-"$PR_AUTHOR"}
          SLACK_REVIEWER_ID=${GITHUB_TO_SLACK[$PR_REVIEWER]:-"$PR_REVIEWER"}
          SLACK_AUTHOR_MENTION="<@$SLACK_AUTHOR_ID>"
          SLACK_REVIEWER_MENTION="<@$SLACK_REVIEWER_ID>"
          
          REVIEW_API_URL="https://api.github.com/repos/$REPOSITORY/pulls/$PR_NUMBER/reviews"
          REVIEW_COUNT=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            "$REVIEW_API_URL" \
            | jq -r --arg reviewer "$PR_REVIEWER" '[.[] | select(.user.login == $reviewer)] | length')
          
          if [ "$REVIEW_COUNT" -gt 0 ]; then
            PR_STATUS="üè∏ *Ïû¨Î¶¨Î∑∞ ÏöîÏ≤≠ ÏïåÎ¶º*"
          else
            echo "ÏµúÏ¥à Î¶¨Î∑∞ ÏöîÏ≤≠ÏúºÎ°ú Í∞ÑÏ£ºÎêòÏñ¥ ÏïåÎ¶ºÏùÑ ÏÉùÎûµÌï©ÎãàÎã§."
            exit 0
          fi
          
          read -r -d '' PAYLOAD <<EOF
          {
            "text": "${PR_STATUS}\n*PR Ï†úÎ™©:* ${PR_TITLE} (#${PR_NUMBER})\n*ÏûëÏÑ±Ïûê:* ${SLACK_AUTHOR_MENTION}\n*Î¶¨Î∑∞Ïñ¥:* ${SLACK_REVIEWER_MENTION}\n*ÎßÅÌÅ¨:* ${PR_URL}"
          }
          EOF
  
          curl -X POST 
          -H 'Content-type: application/json' 
          --data "$PAYLOAD" 
          $SLACK_WEBHOOK_URL
