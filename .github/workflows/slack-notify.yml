name: Slack Review Notification

on:
  pull_request:
    types: [opened, ready_for_review, review_requested]
  pull_request_review:
    types: [submitted]

jobs:
  notify-initial-reviewers:
    runs-on: ubuntu-latest

    steps:
      # JSON ÌååÏã± ÎèÑÍµ¨
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Notify Reviewers
        run: |
          SLACK_WEBHOOK_URL="${{ secrets.SLACK_WEBHOOK_URL }}"
          GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          REPOSITORY="${{ github.repository }}"
          ACTION_TYPE="${{ github.event.action }}"
          REVIEWERS_JSON='${{ toJson(github.event.pull_request.requested_reviewers) }}'
          PR_REVIEWER="${{ github.event.requested_reviewer.login }}"
          
          declare -A GITHUB_TO_SLACK
          GITHUB_TO_SLACK["soeun2537"]="U09A0LM0CRW"
          GITHUB_TO_SLACK["taek2222"]="U099ARRH3D3"
          GITHUB_TO_SLACK["changuii"]="U099BR9RNE6"
          GITHUB_TO_SLACK["eoehd1ek"]="U0995NANDML"
          GITHUB_TO_SLACK["oungsi2000"]="U098U2R57NK"
          GITHUB_TO_SLACK["parkjiminnnn"]="U098U8SLXHD"
          GITHUB_TO_SLACK["etama123"]="U0995MPSZ62"
          
          SLACK_AUTHOR_ID=${GITHUB_TO_SLACK[$PR_AUTHOR]:-"$PR_AUTHOR"}
          SLACK_AUTHOR_MENTION="<@$SLACK_AUTHOR_ID>"

          ############################
          # STEP 1: ÏµúÏ¥à Î¶¨Î∑∞ ÏöîÏ≤≠ ÏïåÎ¶º
          ############################
          if [[ "$ACTION_TYPE" == "opened" || "$ACTION_TYPE" == "ready_for_review" ]]; then
            REVIEWER_MENTIONS=""
            for reviewer in $(echo "$REVIEWERS_JSON" | jq -r '.[].login'); do
              slack_id=${GITHUB_TO_SLACK[$reviewer]:-"$reviewer"}
              REVIEWER_MENTIONS+="<@$slack_id> "
            done

            if [ -z "$REVIEWER_MENTIONS" ]; then
              echo "Î¶¨Î∑∞Ïñ¥Í∞Ä ÏóÜÏúºÎØÄÎ°ú ÏïåÎ¶º ÏÉùÎûµ"
              exit 0
            fi

            curl -X POST -H 'Content-type: application/json' \
              --data "{\"text\": \"üì¢ *Î¶¨Î∑∞ ÏöîÏ≤≠ ÏïåÎ¶º*\n*PR Ï†úÎ™©:* ${PR_TITLE} (#${PR_NUMBER})\n*ÏûëÏÑ±Ïûê:* ${SLACK_AUTHOR_MENTION}\n*Î¶¨Î∑∞Ïñ¥:* ${REVIEWER_MENTIONS}\n*ÎßÅÌÅ¨:* ${PR_URL}\"}" \
              $SLACK_WEBHOOK_URL

            exit 0
          fi
          
          ############################
          # STEP 2: Ïû¨Î¶¨Î∑∞ ÏöîÏ≤≠ ÏïåÎ¶º
          ############################
          if [[ "$ACTION_TYPE" == "review_requested" ]]; then
            slack_id=${GITHUB_TO_SLACK[$PR_REVIEWER]:-"$PR_REVIEWER"}
            SLACK_REVIEWER_MENTION="<@$slack_id>"
          
            REVIEW_API_URL="https://api.github.com/repos/$REPOSITORY/pulls/$PR_NUMBER/reviews"
            REVIEW_COUNT=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" "$REVIEW_API_URL" \
              | jq -r --arg reviewer "$PR_REVIEWER" '[.[] | select(.user.login == $reviewer)] | length')
          
            if [ "$REVIEW_COUNT" -eq 0 ]; then
              echo "ÏµúÏ¥à Î¶¨Î∑∞ ÏöîÏ≤≠ÏúºÎ°ú Í∞ÑÏ£ºÎêòÏñ¥ ÏïåÎ¶º ÏÉùÎûµ"
              exit 0
            fi
        
            curl -X POST -H 'Content-type: application/json' \
              --data "{\"text\": \"üè∏ *Ïû¨Î¶¨Î∑∞ ÏöîÏ≤≠ ÏïåÎ¶º*\n*PR Ï†úÎ™©:* ${PR_TITLE} (#${PR_NUMBER})\n*ÏûëÏÑ±Ïûê:* ${SLACK_AUTHOR_MENTION}\n*Î¶¨Î∑∞Ïñ¥:* ${SLACK_REVIEWER_MENTION}\n*ÎßÅÌÅ¨:* ${PR_URL}\"}" \
              $SLACK_WEBHOOK_URL
          fi

  notify-review-submitted:
    runs-on: ubuntu-latest

    steps:
      - name: Notify Review Submitted
        run: |
          SLACK_WEBHOOK_URL="${{ secrets.SLACK_WEBHOOK_URL }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          REVIEW_STATE="${{ github.event.review.state }}"
          REVIEWER="${{ github.event.review.user.login }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          REPOSITORY="${{ github.repository }}"
          
          if [[ "$REVIEW_STATE" == "commented" ]]; then
            echo "Îã®Ïàú ÏΩîÎ©òÌä∏ Î¶¨Î∑∞Îäî ÏïåÎ¶º ÏÉùÎûµ"
            exit 0
          fi

          declare -A GITHUB_TO_SLACK
          GITHUB_TO_SLACK["soeun2537"]="U09A0LM0CRW"
          GITHUB_TO_SLACK["taek2222"]="U099ARRH3D3"
          GITHUB_TO_SLACK["changuii"]="U099BR9RNE6"
          GITHUB_TO_SLACK["eoehd1ek"]="U0995NANDML"
          GITHUB_TO_SLACK["oungsi2000"]="U098U2R57NK"
          GITHUB_TO_SLACK["parkjiminnnn"]="U098U8SLXHD"
          GITHUB_TO_SLACK["etama123"]="U0995MPSZ62"

          SLACK_REVIEWER_ID=${GITHUB_TO_SLACK[$REVIEWER]:-"$REVIEWER"}
          SLACK_AUTHOR_ID=${GITHUB_TO_SLACK[$PR_AUTHOR]:-"$PR_AUTHOR"}

          SLACK_REVIEWER_MENTION="<@$SLACK_REVIEWER_ID>"
          SLACK_AUTHOR_MENTION="<@$SLACK_AUTHOR_ID>"

          ICON=""
          case "$REVIEW_STATE" in
            approved)
              ICON="‚úÖ"
              ;;
            changes_requested)
              ICON="üî¥"
              ;;
          esac

          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\": \"${ICON} *Î¶¨Î∑∞ ÏôÑÎ£å ÏïåÎ¶º*\n*PR Ï†úÎ™©:* ${PR_TITLE} (#${PR_NUMBER})\n*ÏûëÏÑ±Ïûê:* ${SLACK_AUTHOR_MENTION}\n*Î¶¨Î∑∞Ïñ¥:* ${SLACK_REVIEWER_MENTION}\n*ÏÉÅÌÉú:* ${REVIEW_STATE}\n*ÎßÅÌÅ¨:* ${PR_URL}\"}" \
            $SLACK_WEBHOOK_URL
